// <auto-generated />
using System;
using HumPsi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumPsi.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240508162757_addNavMenuTableToDb")]
    partial class addNavMenuTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HumPsi.DataAccess.Entites.ArticlesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeadlinesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortContent")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortContentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HeadlinesId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.HeadlinesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TitlePhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Headlines");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.PhotoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArticlesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HeadlinesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArticlesId");

                    b.HasIndex("HeadlinesId")
                        .IsUnique()
                        .HasFilter("[HeadlinesId] IS NOT NULL");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.SectionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TitleSection")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Section");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6aeb99f8-7580-4cfb-9326-201173b1ff6d"),
                            TitleSection = "Biochemistry"
                        },
                        new
                        {
                            Id = new Guid("d2bbc481-6908-4dc8-b979-e6398e8b22db"),
                            TitleSection = "Histology"
                        },
                        new
                        {
                            Id = new Guid("01ba7970-8b13-4364-9530-4b232037a402"),
                            TitleSection = "Cardiovascular"
                        },
                        new
                        {
                            Id = new Guid("583508f1-c5de-40b8-9b13-78940a4d2db9"),
                            TitleSection = "Respiratory"
                        },
                        new
                        {
                            Id = new Guid("7e2ff28b-b27a-4148-9b7f-808d66af82b2"),
                            TitleSection = "Gastrointestinal"
                        },
                        new
                        {
                            Id = new Guid("f11cafa8-40b3-4cd2-87d1-b217b3413317"),
                            TitleSection = "Urinary"
                        },
                        new
                        {
                            Id = new Guid("998d048b-98e2-464e-b686-b83d625452f1"),
                            TitleSection = "Reproductive"
                        },
                        new
                        {
                            Id = new Guid("208e144b-3a09-4f1e-8d8f-3b06e4e78174"),
                            TitleSection = "Neurology"
                        },
                        new
                        {
                            Id = new Guid("f0d70a63-9971-44c5-8f42-61d276e37cac"),
                            TitleSection = "Endocrine"
                        },
                        new
                        {
                            Id = new Guid("45a62589-ec08-47ae-83c0-969b54d6dbd9"),
                            TitleSection = "Immunology/Haematology"
                        });
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.ArticlesEntity", b =>
                {
                    b.HasOne("HumPsi.DataAccess.Entites.HeadlinesEntity", "Headlines")
                        .WithMany("Articles")
                        .HasForeignKey("HeadlinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Headlines");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.HeadlinesEntity", b =>
                {
                    b.HasOne("HumPsi.DataAccess.Entites.SectionEntity", "Section")
                        .WithMany("Headlines")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.PhotoEntity", b =>
                {
                    b.HasOne("HumPsi.DataAccess.Entites.ArticlesEntity", "Articles")
                        .WithMany("Photos")
                        .HasForeignKey("ArticlesId");

                    b.HasOne("HumPsi.DataAccess.Entites.HeadlinesEntity", "Headlines")
                        .WithOne("Photo")
                        .HasForeignKey("HumPsi.DataAccess.Entites.PhotoEntity", "HeadlinesId");

                    b.Navigation("Articles");

                    b.Navigation("Headlines");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.ArticlesEntity", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.HeadlinesEntity", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("HumPsi.DataAccess.Entites.SectionEntity", b =>
                {
                    b.Navigation("Headlines");
                });
#pragma warning restore 612, 618
        }
    }
}
